{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"re",
				"responseData"
			],
			[
				"fet",
				"fetchText"
			],
			[
				"res",
				"responseData"
			],
			[
				"St",
				"setTimer"
			],
			[
				"in",
				"Inseconds"
			],
			[
				"cu",
				"currentTime"
			],
			[
				"REs",
				"responseData"
			],
			[
				"to",
				"toString"
			],
			[
				"co",
				"convertedString"
			],
			[
				"IP",
				"IPAddress"
			],
			[
				"H",
				"HoldDisplayForTime"
			],
			[
				"Show",
				"ShowIPAddress"
			],
			[
				"I",
				"IPAddress"
			],
			[
				"mi",
				"minutes"
			],
			[
				"Ser",
				"Serial"
			],
			[
				"stat",
				"state"
			],
			[
				"pad",
				"padding-right"
			],
			[
				"padding-",
				"padding-left"
			],
			[
				"ma",
				"margin"
			],
			[
				"mar",
				"margin"
			],
			[
				"tex",
				"text-decoration"
			],
			[
				"pa",
				"padding-top"
			],
			[
				"bor",
				"border"
			],
			[
				"bord",
				"border-color"
			],
			[
				"Pa",
				"pause"
			],
			[
				"Se",
				"SetTimerValue"
			],
			[
				"fun",
				"function"
			],
			[
				"has",
				"hasParam"
			],
			[
				"se",
				"Serial"
			],
			[
				"del",
				"delay"
			],
			[
				"Pri",
				"println"
			],
			[
				"s",
				"studytime"
			],
			[
				"top",
				"top"
			],
			[
				"posi",
				"object-position"
			],
			[
				"a",
				"absolute"
			],
			[
				"bo",
				"border-radius"
			],
			[
				"ti",
				"timetake"
			],
			[
				"coun",
				"countdown"
			],
			[
				"h",
				"hours"
			],
			[
				"Da",
				"DateTime"
			],
			[
				"data",
				"data-start"
			],
			[
				"da",
				"data-hours"
			],
			[
				"get",
				"getElementById"
			],
			[
				"left",
				"leftminutes"
			],
			[
				"lef",
				"lefthours"
			],
			[
				"S",
				"StudyTime"
			],
			[
				"bra",
				"BreakTime"
			],
			[
				"B",
				"BreakTime"
			],
			[
				"test",
				"text-underline-position"
			],
			[
				"padd",
				"padding-left"
			],
			[
				"margin",
				"margin-left"
			],
			[
				"f",
				"function"
			],
			[
				"color",
				"background-color"
			],
			[
				"tim",
				"time"
			],
			[
				"Ti",
				"TimeLeft"
			],
			[
				"Stud",
				"StudyTime"
			],
			[
				"app",
				"appendChild"
			],
			[
				"on",
				"onclick"
			],
			[
				"ge",
				"getElementById"
			],
			[
				"de",
				"delay"
			],
			[
				"LED",
				"LED_BUILTIN"
			],
			[
				"def",
				"default"
			],
			[
				"mod",
				"models"
			],
			[
				"pub",
				"published"
			],
			[
				"mo",
				"model\tmodel"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "#include <ESPAsyncTCP.h>\n#include <ESPAsyncWebServer.h>\n#include <LittleFS.h>\n#include <Wire.h>\n#include <Arduino.h>\n#include \"segmentDriver.h\"\n\nunsigned long previousMillis = 0;\nunsigned long countedSeconds = 0;\nunsigned long Seconds = 0;\nint state = 1;\n\nconst long interval = 2; //refresh display time in ms\n\nconst char* ssid = \"106A\";\nconst char* password = \"uzrvhEK97dEKRJ\";\n\nString inputMessage;\nString inputParam;\nconst char* PARAM_VALUE = \"value\";\n\n// Create AsyncWebServer object on port 80\nAsyncWebServer server(80);\n\nvoid ShowIPAddress(const IPAddress localIP){\n  String ip = localIP.toString();\n\n  String convertedString = \"\";\n  for (unsigned int i = 0; i < ip.length() + 1; ++i)\n  {\n    if(ip.substring(i,i+1) != \".\" && ip.substring(i,i+1) != \"\"){ //divide ip address into segments\n      convertedString += ip.substring(i,i+1); \n    }else{\n      ShowNuberDec(convertedString.toInt());\n\n      unsigned long countedSeconds = 0;\n      while(1){\n        if(countedSeconds >= 1000){ //show each segment of ip address for 1s\n          countedSeconds = 0;\n          break;\n        }\n        delay(2);\n        HoldDisplay();\n        delay(2);\n        ClearDisplay();\n        countedSeconds += 2;\n      }\n      convertedString = \"\";\n    }\n  }\n}\n\n\nvoid setup(){\n  Initialilze();\n  //Serial port for debugging purposes\n  //Serial.begin(19200);\n  WiFi.begin(ssid, password);\n  //Serial.println(\"Connecting to WiFi \");\n  while (WiFi.status() != WL_CONNECTED) {\n    delay(1000);\n  }\n\n  LittleFS.begin();\n  ShowIPAddress(WiFi.localIP());\n\n// What server do when client send a request\n  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest *request){\n    //Serial.println(\"New client connected!\");\n    request->send(LittleFS, \"/timer.html\");\n    //If timer was set, send current status\n  });\n\n//If timer was set, send current status\n  server.on(\"/check\", HTTP_GET, [](AsyncWebServerRequest *request){\n    request->send(200, \"text/plain\", String(Seconds));\n  });\n\n    server.on(\"/style.css\", HTTP_GET, [](AsyncWebServerRequest *request){\n    request->send(LittleFS, \"/style.css\", \"text/css\");\n  });\n\n    server.on(\"/timer.js\", HTTP_GET, [](AsyncWebServerRequest *request){\n    request->send(LittleFS, \"/timer.js\", \"text/js\");\n  });\n\n    server.on(\"/get\", HTTP_GET, [](AsyncWebServerRequest *request){ \n                                                                    \n    if (request->hasParam(PARAM_VALUE)){\n      inputMessage = request -> getParam(PARAM_VALUE) -> value();\n      inputParam = PARAM_VALUE;\n    }else{\n      inputParam = \"0\";\n      inputMessage = \"9999\";\n    }\n\n    CountDown(inputMessage.toInt());\n    request->send(LittleFS, \"/timer.html\");\n  });\n\n    server.on(\"/restart\", HTTP_GET, [](AsyncWebServerRequest *request){ \n                                                                    \n    Seconds = 0;  \n    request->send(LittleFS, \"/timer.html\");\n  });\n\n  server.begin();\n}\n\nvoid CountDown(unsigned long inSeconds){\n    delay(8000);\n    Seconds = inSeconds;\n}\n\nvoid loop(){ \n  if (Seconds == 0) //light up the counter only if countdown is enabled\n  {\n    ClearDisplay();\n  }\n\n  if(Seconds != 0){\n    int hours = floor(Seconds / 3600);\n    int minutes = floor((Seconds % 3600) / 60);\n\n    ShowNuberDec(hours * 100 + minutes);\n\n    if(countedSeconds >= 1000){\n      countedSeconds = 0;\n      Seconds--;\n    }\n    unsigned long currentMillis = millis();\n\n    if (currentMillis - previousMillis >= interval) {\n      previousMillis = currentMillis;\n      countedSeconds = countedSeconds + 2;\n\n      if(state == 0){\n        HoldDisplay();\n        state = 1;\n      }else{\n        ClearDisplay();\n        state = 0;\n      }\n    }\n  }\n}\n//send current status if timer was set\n//send response if time is up",
			"file": "src/serial.ino",
			"file_size": 4013,
			"file_write_time": 133075350104710482,
			"settings":
			{
				"buffer_size": 3715,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALAIAAAAAAAAsQgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALAIAAAAAAAAsAgAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"paste",
					null,
					"AQAAALEIAAAAAAAANAkAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALEIAAAAAAAAsQgAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BwAAADQJAAAAAAAANQkAAAAAAAAAAAAANQkAAAAAAAA3CQAAAAAAAAAAAAA1CQAAAAAAADUJAAAAAAAAAgAAACAgNQkAAAAAAAA5CQAAAAAAAAAAAAA5CQAAAAAAADoJAAAAAAAAAAAAADoJAAAAAAAAPgkAAAAAAAAAAAAANQkAAAAAAAA1CQAAAAAAAAQAAAAgICAg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQJAAAAAAAANAkAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					2,
					"left_delete",
					null,
					"AgAAADgJAAAAAAAAOAkAAAAAAAACAAAAICA2CQAAAAAAADYJAAAAAAAAAgAAACAg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoJAAAAAAAAOgkAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"paste",
					null,
					"AQAAADYJAAAAAAAAuQkAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYJAAAAAAAANgkAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAALkJAAAAAAAAugkAAAAAAAAAAAAAugkAAAAAAAC8CQAAAAAAAAAAAAC6CQAAAAAAALoJAAAAAAAAAgAAACAgugkAAAAAAAC+CQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkJAAAAAAAAuQkAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					2,
					"left_delete",
					null,
					"AgAAALwJAAAAAAAAvAkAAAAAAAACAAAAICC6CQAAAAAAALoJAAAAAAAAAgAAACAg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4JAAAAAAAAvgkAAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					1,
					"paste",
					null,
					"AgAAAMEIAAAAAAAAzQgAAAAAAAAAAAAAzQgAAAAAAADNCAAAAAAAAAgAAAB0aW1lci5qcw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEIAAAAAAAAyQgAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"paste",
					null,
					"AgAAABwJAAAAAAAAKAkAAAAAAAAAAAAAKAkAAAAAAAAoCQAAAAAAAAgAAAB0aW1lci5qcw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwJAAAAAAAAJAkAAAAAAAAAAAAAAADwvw"
				],
				[
					29,
					1,
					"paste",
					null,
					"AgAAAKQJAAAAAAAAtgkAAAAAAAAAAAAAtgkAAAAAAAC2CQAAAAAAAAkAAAAvdGltZXIuanM",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQJAAAAAAAArQkAAAAAAAAAAAAAAADwvw"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAKQJAAAAAAAApQkAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQJAAAAAAAApAkAAAAAAAAAAAAAAADwvw"
				],
				[
					38,
					1,
					"paste",
					null,
					"AgAAAE4JAAAAAAAAYAkAAAAAAAAAAAAAYAkAAAAAAABgCQAAAAAAAAgAAAB0aW1lci5qcw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4JAAAAAAAAVgkAAAAAAAAAAAAAAADwvw"
				],
				[
					52,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAANUJAAAAAAAA1wkAAAAAAAAAAAAAsAgAAAAAAACyCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUJAAAAAAAAsAgAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAALAIAAAAAAAAsAgAAAAAAAAqAQAALyoKICAgIHNlcnZlci5vbigiL0hhY2tUaW1lci5qcyIsIEhUVFBfR0VULCBbXShBc3luY1dlYlNlcnZlclJlcXVlc3QgKnJlcXVlc3QpewogICAgcmVxdWVzdC0+c2VuZChMaXR0bGVGUywgIi9IYWNrVGltZXIuanMiLCAidGV4dC9qcyIpOwogIH0pOwoKICAgIHNlcnZlci5vbigiL0hhY2tUaW1lcldvcmtlci5qcyIsIEhUVFBfR0VULCBbXShBc3luY1dlYlNlcnZlclJlcXVlc3QgKnJlcXVlc3QpewogICAgcmVxdWVzdC0+c2VuZChMaXR0bGVGUywgIi9IYWNrVGltZXJXb3JrZXIuanMiLCAidGV4dC9qcyIpOwogIH0pOyovCg",
					"AQAAAAAAAAABAAAA2gkAAAAAAACwCAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "platformio.ini",
			"settings":
			{
				"buffer_size": 513,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AgAAAG0BAAAAAAAApwEAAAAAAAAAAAAApwEAAAAAAACnAQAAAAAAACwAAABbZW52OmQxXQpwbGF0Zm9ybSA9IGVzcHJlc3NpZjgyNjYKYm9hcmQgPSBkMQ",
					"AQAAAAAAAAABAAAAmQEAAAAAAABtAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "data/timer.js",
			"redo_stack":
			[
				[
					54,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AgAAAAMAAAAAAAAAJwAAAAAAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAEAAABz",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAADwvw"
				]
			],
			"settings":
			{
				"buffer_size": 5132,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAVgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAAFUAAAAAAAAAVQAAAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYAAAAAAAAAVgAAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					2,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAABWAAAAaW1wb3J0IHsgY2xlYXJJbnRlcnZhbCwgY2xlYXJUaW1lb3V0LCBzZXRJbnRlcnZhbCwgc2V0VGltZW91dCB9IGZyb20gJ3dvcmtlci10aW1lcnMnOwo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAA"
				],
				[
					20,
					1,
					"paste",
					null,
					"AQAAACwAAAAAAAAAZAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwAAAAAAAAALAAAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"left_delete",
					null,
					"AQAAAGMAAAAAAAAAYwAAAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQAAAAAAAAAZAAAAAAAAAAAAAAAAADwvw"
				],
				[
					30,
					1,
					"cut",
					null,
					"AQAAACwAAAAAAAAALAAAAAAAAAA3AAAAaW1wb3J0IEhhY2tUaW1lciBmcm9tICIuL3NjcmlwdHMvaGFja3RpbWVyL0hhY2tUaW1lciI7Cg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwAAAAAAAAAYwAAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"left_delete",
					null,
					"AQAAACsAAAAAAAAAKwAAAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwAAAAAAAAALAAAAAAAAAAAAAAAAADwvw"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADAAAAAAAAAAMQAAAAAAAAAAAAAAMQAAAAAAAAA1AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAADwvw"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					44,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAOAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					45,
					1,
					"left_delete",
					null,
					"AQAAADcAAAAAAAAANwAAAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgAAAAAAAAAOAAAAAAAAAAAAAAAAADwvw"
				],
				[
					49,
					16,
					"left_delete",
					null,
					"EAAAACoAAAAAAAAAKgAAAAAAAAABAAAALykAAAAAAAAAKQAAAAAAAAABAAAAcigAAAAAAAAAKAAAAAAAAAABAAAAZScAAAAAAAAAJwAAAAAAAAABAAAAbSYAAAAAAAAAJgAAAAAAAAABAAAAaSUAAAAAAAAAJQAAAAAAAAABAAAAdCQAAAAAAAAAJAAAAAAAAAABAAAAayMAAAAAAAAAIwAAAAAAAAABAAAAYyIAAAAAAAAAIgAAAAAAAAABAAAAYSEAAAAAAAAAIQAAAAAAAAABAAAAaCAAAAAAAAAAIAAAAAAAAAABAAAALx8AAAAAAAAAHwAAAAAAAAABAAAAcx4AAAAAAAAAHgAAAAAAAAABAAAAdB0AAAAAAAAAHQAAAAAAAAABAAAAcBwAAAAAAAAAHAAAAAAAAAABAAAAaRsAAAAAAAAAGwAAAAAAAAABAAAAcg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACsAAAAAAAAAKwAAAAAAAAAAAAAAAADwvw"
				],
				[
					50,
					2,
					"left_delete",
					null,
					"AgAAABoAAAAAAAAAGgAAAAAAAAABAAAAYxkAAAAAAAAAGQAAAAAAAAABAAAAcw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABsAAAAAAAAAGwAAAAAAAAAAAAAAAADwvw"
				],
				[
					53,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAACQAAAAAAAAAJgAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "data/timer.html",
			"settings":
			{
				"buffer_size": 1381,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYAAAAAAAAA5gAAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					1,
					"left_delete",
					null,
					"AQAAAOYAAAAAAAAA5gAAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcAAAAAAAAA5wAAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYAAAAAAAAA5gAAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"paste",
					null,
					"AQAAAOcAAAAAAAAA9AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcAAAAAAAAA5wAAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAPMAAAAAAAAA8wAAAAAAAAABAAAAIu0AAAAAAAAA7QAAAAAAAAAGAAAAbW9kdWxl",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPQAAAAAAAAA9AAAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					7,
					"left_delete",
					null,
					"BwAAAOwAAAAAAAAA7AAAAAAAAAABAAAAIusAAAAAAAAA6wAAAAAAAAABAAAAPeoAAAAAAAAA6gAAAAAAAAABAAAAZekAAAAAAAAA6QAAAAAAAAABAAAAcOgAAAAAAAAA6AAAAAAAAAABAAAAeecAAAAAAAAA5wAAAAAAAAABAAAAdOYAAAAAAAAA5gAAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO0AAAAAAAAA7QAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "lib/segmentDriver/segmentDriver.h",
			"settings":
			{
				"buffer_size": 393,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/segmentDriver/segmentDriver.cpp",
			"settings":
			{
				"buffer_size": 3380,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		}
	],
	"build_system": "PlatformIO",
	"build_system_choices":
	[
		[
			[
				[
					"PlatformIO",
					""
				],
				[
					"PlatformIO",
					"Build"
				],
				[
					"PlatformIO",
					"Upload"
				],
				[
					"PlatformIO",
					"Clean"
				],
				[
					"PlatformIO",
					"Test"
				],
				[
					"PlatformIO",
					"Upload SPIFFS image"
				],
				[
					"PlatformIO",
					"Update platforms and libraries"
				],
				[
					"PlatformIO",
					"Upgrade PlatformIO Core"
				]
			],
			[
				"PlatformIO",
				"Build"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"up",
				"Build With: PlatformIO - Upload"
			],
			[
				"lwoer",
				"Convert Case: Lower Case"
			],
			[
				"uplo",
				"Build With: PlatformIO - Build"
			],
			[
				"upload",
				"Build With: PlatformIO - Upload"
			],
			[
				"BUILD",
				"Build With: PlatformIO - Upload"
			],
			[
				"bui",
				"Build With: PlatformIO - Build"
			],
			[
				"",
				"Bookmarks: Select All"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"upl",
				"Build With: PlatformIO - Upload"
			],
			[
				"uploa",
				"Build With: PlatformIO - Upload SPIFFS image"
			],
			[
				"uo",
				"Build With: PlatformIO - Upload"
			],
			[
				"uploaf",
				"Build With: PlatformIO - Upload SPIFFS image"
			],
			[
				"build",
				"Build With: PlatformIO - Build"
			],
			[
				"uoup",
				"Build With: PlatformIO - Upload"
			],
			[
				"pla",
				"Build With: PlatformIO - Upload"
			],
			[
				"upgrade",
				"Build With: PlatformIO - Upgrade PlatformIO Core"
			],
			[
				"package control ",
				"Package Control: Remove Package"
			],
			[
				"package install",
				"Package Control: Install Package"
			],
			[
				"uploda",
				"Build With: PlatformIO - Upload"
			],
			[
				"platformio",
				"Build With: PlatformIO - Build"
			],
			[
				"platrfo",
				"Build With: PlatformIO"
			],
			[
				"package",
				"Package Control: List Unmanaged Packages"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"bac",
				"Package Control: Disable Package"
			],
			[
				"backup",
				"Automatic Backups: Step to start of history"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"platfromio",
				"Build With: PlatformIO - Upgrade PlatformIO Core"
			],
			[
				"platform",
				"Build With: PlatformIO - Upload"
			],
			[
				"platfr",
				"Build With: PlatformIO - Test"
			],
			[
				"Sublime ",
				"SublimeGDB: Start Debugging"
			],
			[
				"install ",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 158.0,
		"history":
		[
			"backup",
			"dir"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/dom/Documents/Coding/Esp8266-countdown-timer/esp8266",
		"/home/dom/Documents/Coding/Esp8266-countdown-timer/esp8266/data",
		"/home/dom/Documents/Coding/Esp8266-countdown-timer/esp8266/lib",
		"/home/dom/Documents/Coding/Esp8266-countdown-timer/esp8266/lib/segmentDriver",
		"/home/dom/Documents/Coding/Esp8266-countdown-timer/esp8266/src"
	],
	"file_history":
	[
		"/home/dom/Documents/Coding/Esp8266-countdown-timer/esp8266/data/package.json",
		"/home/dom/Documents/Coding/Esp8266-countdown-timer/esp8266/lib/segmentDriver/segmentDriver.cpp",
		"/home/dom/Documents/Coding/Esp8266-countdown-timer/esp8266/lib/segmentDriver/segmentDriver.h",
		"/home/dom/Documents/Coding/Esp8266-countdown-timer/esp8266/data/timer.js",
		"/home/dom/Documents/Coding/Esp8266-countdown-timer/esp8266/data/timer.html",
		"/home/dom/Documents/Coding/Esp8266-countdown-timer/esp8266/src/serial.ino",
		"/home/dom/Documents/Coding/Esp8266-countdown-timer/esp8266/data/style.css",
		"/home/dom/Documents/Coding/Esp8266-countdown-timer/esp8266/lib/7segmentDriver/segmentDriver.h",
		"/home/dom/Documents/Coding/Esp8266-countdown-timer/esp8266/lib/7segmentDriver/segmentDriver.cpp",
		"/home/dom/Documents/Coding/Esp8266-countdown-timer/esp8266/platformio.ini",
		"/home/dom/Documents/Coding/Esp8266-countdown-timer/esp8266/src/test.ino",
		"/home/dom/Documents/Coding/Esp8266-countdown-timer/esp8266/src/test.cpp",
		"/home/dom/esp8266/esp8266/LittleFSBuilder.py",
		"/home/dom/esp8266/esp8266/data/style.css",
		"/home/dom/esp8266/esp8266/data/timer.js",
		"/home/dom/esp8266/esp8266/platformio.ini",
		"/home/dom/esp8266/esp8266/src/serial.ino",
		"/home/dom/.config/sublime-text-3/Packages/User/commentHtml.sublime-snippet",
		"/home/dom/esp8266/esp8266/data/timer.html",
		"/home/dom/esp8266/data/timer.html",
		"/home/dom/esp8266/data/timer.css",
		"/home/dom/esp8266/platformio.ini",
		"/home/dom/esp8266/src/tes.c",
		"/home/dom/esp8266/platformio.sublime-project",
		"/home/dom/.config/sublime-text-3/Packages/User/Automatic Backups.sublime-settings",
		"/home/dom/.config/sublime-text-3/Packages/Automatic Backups/Automatic Backups.sublime-settings",
		"/home/dom/.config/sublime-text-3/Packages/Automatic Backups/Default (Linux).sublime-keymap",
		"/home/dom/phyweb/phyweb/home/templates/base/base.html",
		"/home/dom/phyweb/phyweb/home/views.py",
		"/home/dom/phyweb/phyweb/home/models.py",
		"/home/dom/phyweb/phyweb/templates/base/base.html",
		"/home/dom/phyweb/phyweb/home/urls.py",
		"/home/dom/phyweb/phyweb/home/admin.py",
		"/home/dom/phyweb/phyweb/phyweb/settings.py",
		"/home/dom/phyweb/phyweb/phyweb/urls.py",
		"/home/dom/examples/examples/blog/static/css/blog.css",
		"/home/dom/examples/examples/blog/views.py",
		"/home/dom/examples/examples/blog/forms.py",
		"/home/dom/django/testsite/blog/models.py",
		"/home/dom/django/testsite/blog/admin.py",
		"/home/dom/snap/joplin-james-carroll/59/.config/joplin-desktop/edit-95c2d19b12cd4a6ca15df1dacf89a128.md",
		"/home/dom/django/testsite/testsite/settings.py",
		"/home/dom/envformath/project/scene.py",
		"/home/dom/snap/joplin-james-carroll/59/.config/joplin-desktop/edit-431049d013ea4ea285167f952e3c70d4.md",
		"/home/dom/PlatformIO/src/blink",
		"/home/dom/PlatformIO/platformio.ini"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 105.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"!=",
			"timer",
			"();\n",
			"interval",
			"uzrvhEK97dEKRJ",
			"inSeconds",
			"interval",
			"hours",
			"var",
			"Serial",
			"//#",
			"();\n",
			"()",
			"7segmentDriver",
			"}\n",
			"100px",
			"%;",
			"study",
			"break",
			"study",
			"InitializeTimer(\"break\");",
			"InitializeTimer",
			"();\n",
			"ispaused",
			"setTimer",
			"pause()",
			"pause",
			"var ",
			"var",
			"(\"\");\n",
			"    \n",
			"\");",
			"err",
			"uzrvhEK97dEKRJ",
			"106A",
			"break",
			"fields",
			"break",
			"fields",
			"time",
			"timetake",
			"sticky",
			"role",
			"data",
			"absolute",
			"relative",
			"test",
			"paused",
			"pausebutton",
			"restartbutton",
			"pausebutton",
			"Inseconds",
			"pause",
			"false",
			"pausebutton",
			"--><",
			"argument",
			"--><",
			"tmietake",
			"hours",
			"3600",
			"timeleft",
			"time",
			"getAttrubute",
			"TakeTime",
			"document",
			"time",
			"div1",
			"hasAttribute",
			"hasAtribute",
			" -",
			"--><",
			"this",
			" -",
			"seconds",
			"-->",
			"--><",
			"SPIFFS",
			"LittleFS",
			"t",
			"0",
			"StudyTime",
			"timeleft",
			"arguments",
			"time",
			"argument",
			"test",
			"argument",
			"1",
			"argument",
			"timer",
			" =\"",
			"class",
			"-->",
			"data",
			"form",
			"-->",
			"test",
			"argument",
			"Free",
			"argument",
			"time",
			"data",
			"seconds",
			"argument",
			"test",
			"data",
			"val",
			"myLib",
			"2",
			"-->",
			"fields",
			"clss",
			"= ",
			"container",
			"submit",
			"TimeForm",
			"container",
			"slide",
			"minutes",
			"count",
			"cons",
			"TimeToEnd",
			"StudyTime",
			"timer",
			"i",
			"argument",
			"test"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/serial.ino",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3715,
						"regions":
						{
						},
						"selection":
						[
							[
								2224,
								2224
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 745.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "platformio.ini",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 513,
						"regions":
						{
						},
						"selection":
						[
							[
								423,
								423
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "data/timer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5132,
						"regions":
						{
						},
						"selection":
						[
							[
								38,
								2
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "data/timer.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1381,
						"regions":
						{
						},
						"selection":
						[
							[
								230,
								230
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/segmentDriver/segmentDriver.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 393,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "lib/segmentDriver/segmentDriver.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3380,
						"regions":
						{
						},
						"selection":
						[
							[
								3380,
								597
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 285.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 130.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "PlatformIO",
	"project": "platformio.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"data/timer.html"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/Coding/LedCube/platformio.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 190.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
